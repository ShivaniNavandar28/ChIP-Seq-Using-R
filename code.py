# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19jfMhvha8oIMoeww7__8e2QScWsSmiiw
"""

install.packages("devtools")
library(devtools)

"""22/08/23"""

devtools::install_bioc("ChIPseeker")

library(ChIPseeker)

library(TxDb.Hsapiens.UCSC.hg19.knownGene)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene

devtools::install_bioc("clusterProfiler")

library(clusterProfiler)

"""23/08/23"""

peak <- readPeakFile("GSM5392560.bed")
peak

peak1 <- readPeakFile("GSM5392561.bed")
peak1

length(peak)
length(peak1)

"""ChIP peaks coverage plot"""

covplot(peak, weightCol="V5")

covplot(peak1, weightCol="V5")

covplot(peak, weightCol="V5", chrs=c("chr17", "chr18"), xlim=c(4.5e7, 5e7))

covplot(peak1, weightCol="V5", chrs=c("chr17", "chr18"), xlim=c(4.5e7, 5e7))

"""25/08/23

Profile of ChIP peaks binding to TSS regions
"""

promoter <- getPromoters(TxDb=txdb, upstream=3000, downstream=3000)
tagMatrix <- getTagMatrix(peak, windows=promoter)

tagMatrix1 <- getTagMatrix(peak1, windows = promoter)

"""### ChIPseeker provide a one step function to generate this figure from bed file. The following function will generate the same figure as above."""

peakHeatmap(peak, TxDb=txdb, upstream=3000, downstream=3000)
peakHeatmap(peak1, TxDb=txdb, upstream=3000, downstream=3000)

"""### Users can also profile genebody regions with peakHeatmap()."""

peakHeatmap(peak,
            TxDb = txdb,
            upstream = rel(0.2),
            downstream = rel(0.2),
            by = "gene",
            type = "body",
            nbin = 800)

peakHeatmap(peak1,
            TxDb = txdb,
            upstream = rel(0.2),
            downstream = rel(0.2),
            by = "gene",
            type = "body",
            nbin = 800)

"""Here txdb1 and txdb2 is the simulated gene sets obtain from TxDb.Hsapiens.UCSC.hg19.knownGene. Using peakHeatmap_multiple_Sets(), accepting list object containing different regions information."""

txdb1 <- transcripts(TxDb.Hsapiens.UCSC.hg19.knownGene)
txdb2 <- unlist(fiveUTRsByTranscript(TxDb.Hsapiens.UCSC.hg19.knownGene))[1:10000,]

region_list <- list(geneX = txdb1, geneY = txdb2)
peakHeatmap_multiple_Sets(peak,
                     upstream = 1000,
                     downstream = 1000,
                     by = c("geneX","geneY"),
                     type = "start_site",
                     TxDb = region_list,nbin = 800)

peakHeatmap_multiple_Sets(peak1,
                     upstream = 1000,
                     downstream = 1000,
                     by = c("geneX","geneY"),
                     type = "start_site",
                     TxDb = region_list,nbin = 800)

#We also meet the need of ploting heatmap and peak profiling together
peak_Profile_Heatmap(peak,
                     upstream = 1000,
                     downstream = 1000,
                     by = "gene",
                     type = "start_site",
                     TxDb = txdb,
                     nbin = 800)

peak_Profile_Heatmap(peak1,
                     upstream = 1000,
                     downstream = 1000,
                     by = "gene",
                     type = "start_site",
                     TxDb = txdb,
                     nbin = 800)

#Exploring several regions with heatmap and peak profiling is also supported.
txdb1 <- transcripts(TxDb.Hsapiens.UCSC.hg19.knownGene)
txdb2 <- unlist(fiveUTRsByTranscript(TxDb.Hsapiens.UCSC.hg19.knownGene))[1:10000,]

region_list <- list(geneX = txdb1, geneY = txdb2)
peak_Profile_Heatmap(peak,
                     upstream = 1000,
                     downstream = 1000,
                     by = c("geneX","geneY"),
                     type = "start_site",
                     TxDb = region_list,nbin = 800)

peak_Profile_Heatmap(peak1,
                     upstream = 1000,
                     downstream = 1000,
                     by = c("geneX","geneY"),
                     type = "start_site",
                     TxDb = region_list,nbin = 800)

"""Average Profile of ChIP peaks binding to TSS region"""

plotAvgProf(tagMatrix, xlim=c(-3000, 3000),
            xlab="Genomic Region (5'->3')", ylab = "Read Count Frequency")

plotAvgProf(tagMatrix1, xlim=c(-3000, 3000),
            xlab="Genomic Region (5'->3')", ylab = "Read Count Frequency")

#Confidence interval estimated by bootstrap method is also supported for characterizing ChIP binding profiles.

plotAvgProf(tagMatrix, xlim=c(-3000, 3000), conf = 0.95, resample = 1000)

plotAvgProf(tagMatrix1, xlim=c(-3000, 3000), conf = 0.95, resample = 1000)

"""# Profile of ChIP peaks binding to different regions
### Binning method for profile of ChIP peaks binding to TSS regions
"""

## The results of binning method and normal method are nearly the same.
tagMatrix_binning <- getTagMatrix(peak = peak, TxDb = txdb,
                                  upstream = 3000, downstream = 3000,
                                  type = "start_site", by = "gene",
                                  weightCol = "V5", nbin = 800)

"""### Profile of ChIP peaks binding to body regions"""

## Here uses `plotPeakProf2` to do all things in one step.
## Gene body regions having lengths smaller than nbin will be filtered
## A message will be given to warning users about that.
## >> 9 peaks(0.872093%), having lengths smaller than 800bp, are filtered...

## the ignore_strand is FALSE in default. We put here to emphasize that.
## We will not show it again in the below example
plotPeakProf2(peak = peak, upstream = rel(0.2), downstream = rel(0.2),
              conf = 0.95, by = "gene", type = "body", nbin = 800,
              TxDb = txdb, weightCol = "V5",ignore_strand = F)

plotPeakProf2(peak = peak1, upstream = rel(0.2), downstream = rel(0.2),
              conf = 0.95, by = "gene", type = "body", nbin = 800,
              TxDb = txdb, weightCol = "V5",ignore_strand = F)

## The first method using getBioRegion(), getTagMatrix() and plotPeakProf() to plot in three steps.
genebody <- getBioRegion(TxDb = txdb,
                         by = "gene",
                         type = "body")

matrix_no_flankextension <- getTagMatrix(peak,windows = genebody, nbin = 800)

plotPeakProf(matrix_no_flankextension,conf = 0.95)

## The second method of using getTagMatrix() and plotPeakProf() to plot in two steps
matrix_actual_extension <- getTagMatrix(peak,windows = genebody, nbin = 800,
                                        upstream = 1000,downstream = 1000)
plotPeakProf(matrix_actual_extension,conf = 0.95)

matrix_no_flankextension <- getTagMatrix(peak1,windows = genebody, nbin = 800)

plotPeakProf(matrix_no_flankextension,conf = 0.95)

## The second method of using getTagMatrix() and plotPeakProf() to plot in two steps
matrix_actual_extension <- getTagMatrix(peak1,windows = genebody, nbin = 800,
                                        upstream = 1000,downstream = 1000)
plotPeakProf(matrix_actual_extension,conf = 0.95)

#Users can also get the body region of 5UTR/3UTR
five_UTR_body <- getTagMatrix(peak = peak,
                              TxDb = txdb,
                              upstream = rel(0.2),
                              downstream = rel(0.2),
                              type = "body",
                              by = "5UTR",
                              weightCol = "V5",
                              nbin = 50)

plotPeakProf(tagMatrix = five_UTR_body, conf = 0.95)

five_UTR_body <- getTagMatrix(peak = peak1,
                              TxDb = txdb,
                              upstream = rel(0.2),
                              downstream = rel(0.2),
                              type = "body",
                              by = "5UTR",
                              weightCol = "V5",
                              nbin = 50)

plotPeakProf(tagMatrix = five_UTR_body, conf = 0.95)

"""### Profile of ChIP peaks binding to TTS regions"""

TTS_matrix <- getTagMatrix(peak = peak,
                           TxDb = txdb,
                           upstream = 3000,
                           downstream = 3000,
                           type = "end_site",
                           by = "gene",
                           weightCol = "V5")

plotPeakProf(tagMatrix = TTS_matrix, conf = 0.95)

TTS_matrix <- getTagMatrix(peak = peak1,
                           TxDb = txdb,
                           upstream = 3000,
                           downstream = 3000,
                           type = "end_site",
                           by = "gene",
                           weightCol = "V5")

plotPeakProf(tagMatrix = TTS_matrix, conf = 0.95)

"""# Peak Annotation"""

install.packages("org.Hs.eg.db", repos="http://bioconductor.org/packages/3.2/data/annotation")

library(org.Hs.eg.db)

peakAnno <- annotatePeak(peak, tssRegion=c(-3000, 3000),
                         TxDb=txdb, annoDb="org.Hs.eg.db")

peakAnno1 <- annotatePeak(peak1, tssRegion=c(-3000, 3000),
                         TxDb=txdb, annoDb="org.Hs.eg.db")

devtools::install_url("https://bioconductor.org/packages/3.12/data/annotation/src/contrib/EnsDb.Hsapiens.v75_2.99.0.tar.gz")

library(EnsDb.Hsapiens.v75)

devtools::install_bioc("ensembldb")

library(ensembldb)

edb <- EnsDb.Hsapiens.v75
seqlevelsStyle(edb) <- "UCSC"

peakAnno.edb <- annotatePeak(peak, tssRegion=c(-3000, 3000),
                             TxDb=edb, annoDb="org.Hs.eg.db")

peakAnno1.edb <- annotatePeak(peak1, tssRegion=c(-3000, 3000),
                             TxDb=edb, annoDb="org.Hs.eg.db")

"""## Visualize Genomic Annotation"""

plotAnnoPie(peakAnno)

plotAnnoPie(peakAnno1)

plotAnnoBar(peakAnno)
plotAnnoBar(peakAnno1)

vennpie(peakAnno)
vennpie(peakAnno1)

devtools::install_cran("ggupset")

library(ggupset)

upsetplot(peakAnno)
upsetplot(peakAnno1)

devtools::install_github("hms-dbmi/UpSetR")

library(UpSetR)
library(ggplot2)

upsetplot(peakAnno, vennpie=TRUE)
upsetplot(peakAnno1, vennpie=TRUE)

"""## Visualize distribution of TF-binding loci relative to TSS"""

plotDistToTSS(peakAnno,
              title="Distribution of transcription factor-binding loci\nrelative to TSS")

plotDistToTSS(peakAnno1,
              title="Distribution of transcription factor-binding loci\nrelative to TSS")

"""# Functional enrichment analysis"""

devtools::install_bioc("ReactomePA")

library(ReactomePA)

pathway1 <- enrichPathway(as.data.frame(peakAnno)$geneId)
head(pathway1, 2)

gene <- seq2gene(peak, tssRegion = c(-1000, 1000), flankDistance = 3000, TxDb=txdb)
pathway2 <- enrichPathway(gene)
head(pathway2, 2)

pathway3 <- enrichPathway(as.data.frame(peakAnno1)$geneId)
head(pathway3, 2)

gene1 <- seq2gene(peak1, tssRegion = c(-1000, 1000), flankDistance = 3000, TxDb=txdb)
pathway4 <- enrichPathway(gene1)
head(pathway4, 2)

dotplot(pathway2)

dotplot(pathway4)